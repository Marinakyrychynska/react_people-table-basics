{"version":3,"sources":["Pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","Pages/PersonLink.tsx","Pages/PeoplePage.tsx","Pages/NotFoundPage.tsx","Pages/NavPage.tsx","App.tsx","Root.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","classNames","sex","to","slug","name","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","useParams","useEffect","catch","finally","getParent","parentName","find","length","map","born","died","motherName","fatherName","NotFoundPage","getLinkClass","isActive","NavPage","role","App","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.818992f6.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n      to={`/people/${person.slug}`}\n    >\n      {person.name}\n    </Link>\n\n  );\n};\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PersonLink } from './PersonLink';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const { slug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const getParent = (name: string | null) => {\n    if (!name) {\n      return '-';\n    }\n\n    const parentName = people.find(person => person.name === name);\n\n    if (parentName) {\n      return <PersonLink person={parentName} />;\n    }\n\n    return name;\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n          )}\n\n          {people.length === 0 && !isLoading && !errorMessage && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <tr\n                    key={person.slug}\n                    data-cy=\"person\"\n                    className={classNames({\n                      'has-background-warning': person.slug === slug,\n                    })}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>{getParent(person.motherName)}</td>\n                    <td>{getParent(person.fatherName)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive } : { isActive: boolean }) => {\n  return classNames('navbar-item', { 'has-background-grey-lighter': isActive });\n};\n\nexport const NavPage = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { NavPage } from './Pages/NavPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavPage />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import {\n  Routes,\n  Route,\n  HashRouter as Router,\n  Navigate,\n} from 'react-router-dom';\nimport { HomePage } from './Pages/HomePage';\nimport { PeoplePage } from './Pages/PeoplePage';\nimport { NotFoundPage } from './Pages/NotFoundPage';\nimport { App } from './App';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}